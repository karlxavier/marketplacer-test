continue
self
product.price
continue
self.line_total.to_f
self.line_total = self.product_price * self.quantity
self.line_total
self.product_price * self.quantity
self.product_price.to_f
self.product_price
self.product_price = product.price
self.product_price
self.product
self
q
cart.total_price.to_f
cart.discount_amount.to_f
cart.subtotal.to_f
q
cart.total_price.to_f
cart.discount_amount.to_f
cart.subtotal.to_f
continue
q
cart.subtotal.to_f
cart.discount_amount.to_f
cart.total_price.to_f
cart.discount_transactions.size
q
cart.discount_transactions.size
cart.discount_transactions
cart.discount_amount.to_f
cart.cart_items.last.line_total.to_f
cart.cart_items.first.line_total.to_f
cart.cart_items
cart.subtotal.to_f
continue
 cart.discount_transactions.size
 cart.discount_transactions
q
continue
 transaction.discount_transactions
discount_rule
q
cart
q
cart.discount_transactions.pluck(:discountable_id)
cart
q
cart.discount_transactions.pluck(:discountable_id)
q
cart.discount_transactions.pluck(:discountable_id)
cart.discount_transactions.size
cart.discount_transactions
cart
cart.total_price.to_f
cart.discount_amount.to_f
cart.subtotal.to_f
continue
q
cart.subtotal.to_f
continue
transaction.cart_items.sum { |item| item.quantity * item.product_price }.to_f
transaction.cart_items.sum { |item| item.quantity * item.product_price }
continue
product.price
q
transaction.cart_items
q
transaction.cart_items.first.product_price
transaction.cart_items.first.product
transaction.cart_items.first
transaction.cart_items
q
product
product.price
self.product_price.to_f
self.product_price
continue
self
q
cart.cart_items.first.product_price.to_f
cart.cart_items.first.subtotal.to_f
cart.cart_items.first.line_total.to_f
cart.cart_items.size
cart.cart_items
cart.subtotal.to_f
cart
continue
cart
continue
self.valid?
q
self.errors.messages
self.valid?
self.total_price = 22.5
self.reload!
self.user_id
self.user
self
self.reload
self.total_price
self.errors.messages
self.valid?
self
q
cart.total_price.to_f
cart.total_price
cart.errors.messages
cart.valid?
cart.save
cart.total_price.to_f
cart.total_price
cart.errors.messages
cart.valid?
cart
cart.cart_items
cart.discount_transactions.first.valid?
cart.discount_transactions.valid?
cart.discount_transactions
q
cart.total_price.to_f
cart.discount_amount.to_f
cart.subtotal.to_f
continue
calculation
continue
transaction.subtotal .to_f
validator.calculated_discount.to_f
validator.calculated_discount
q
t.valid?
t = transaction.discount_transactions.build(discount_rule:)
t = transaction.discount_transactions.create(discount_rule:)
discount_rule
transaction.discount_transactions
q
expect(cart.subtotal.to_f).to eq(9.0)
cart.total_price.to_f
cart.total_price
cart.subtotal
q
cart.total_price.to_f
cart.discount_amount.to_f
cart.subtotal.to_f
cart.subtotal
continue
transaction.discount_amount
discountable_amount.sum.round(2)
continue
success
continue
success
continue
success
q
value
actual_value
actual_value > value
value = rule["value"].to_f
actual_value = transaction.send(rule["field"]).to_f
value
actual_value
actual_value > value
q
value
actual_value.to_s
actual_value
actual_value > value
value = rule["value"]
actual_value = transaction.send(rule["field"])
rule["operator"]
rule["value"]
transaction.send(rule["field"]).to_f
transaction.send(rule["field"])
rule["field"]
rule
continue
q
transaction
discount_rule
discount_rule.rules
discount_rule
q
discount_rule
q
discount_rules.last.size
discount_rules.last
discount_rules
discount_rule
q
discount_rules['DEFAULT_PROMO'].size
discount_rules['DEFAULT_PROMO']
discount_rules
discount_rule
discount_rule.last
q
discount_rule.last.size
discount_rule.last
q
DiscountRule.active_rules.order(priority: :asc).group_by(&:group_name)
discount_rule.last
discount_rule.last[:rules]
discount_rule.last.size
discount_rule.last
discount_rule.first
discount_rule.size
discount_rule
continue
discount_rules.size
discount_rules
transaction.subtotal.to_f
transaction.subtotal = transaction.cart_items.sum { |item| item.quantity * item.product_price }
transaction.subtotal
transaction.cart_items.sum { |item| item.quantity * item.product_price }.to_f
transaction.cart_items.sum { |item| item.quantity * item.product_price }
transaction.cart_items.sum { |item| item.quantity * item.price }
transaction.cart_items.map { |s| s.product_price.to_f }
transaction.cart_items.first
transaction.cart_items.map { |s| product_price.to_f }
transaction.cart_items.size
transaction.cart_items
continue
q
cart.errors.messages
cart.valid?
q
transaction.subtotal.to_f
transaction
q
self.line_total.to_f
self.line_total = self.product_price * self.quantity
self.product_price * self.quantity
self.reload.product_price * self.quantity
self.product_price.to_f
self.product_price = product.price
self.product_price.to_f
self.product_price
q
self.product_price.to_f
self.product_price
self.product_price.to_s
self.product_price = product.price
self.valid?
self.product_price.to_s
self
self.product_price
q
product.price
self.product_price.to_f
self.product_price
t.to_f
t = self.product_price * self.quantity
self.product_price * self.quantity
product.price
q
